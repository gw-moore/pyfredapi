[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pyfredapi"
version = "0.5.3"
description = "A full featured API client for the FRED API web service."
authors = ["Greg Moore <gwmoore.career@gmail.com>"]
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0.0"
requests = "^2.28.2"
pandas = "^1.5.3"
pydantic = "^1.10.7"
rich = "^13.3.3"
plotly = "^5.14.0"
frozendict = "^2.3.6"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.test]
optional = true

[tool.poetry.group.docs.dependencies]
jupyter = "^1.0.0"
Sphinx = "^6.1.3"
myst-parser = "^1.0.0"
nbsphinx = "^0.9.1"
sphinxcontrib-napoleon = "^0.7"
sphinx-copybutton = "^0.5.1"
sphinx-material = "^0.0.35"
autodoc-pydantic = "^1.8.0"

[tool.poetry.group.lint.dependencies]
types-requests = "^2.28.11.17"
types-setuptools = "^67.6.0.6"
black = {extras = ["jupyter"], version = "^23.3.0"}
ruff = "^0.0.260"
# pandas-stubs = "^1.5.3.230321"
mypy = "^1.1.1"
pre-commit = "^3.2.1"


[tool.poetry.group.test.dependencies]
pytest = "^7.2.2"
tox = "^4.4.8"
coverage = "^7.2.2"
pytest-cov = "^4.0.0"
pytest-vcr = "^1.0.2"

[tool.black]
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.nox
    | \.venv
    | \.ipynb_checkpoints
    | _build
    | buck-out
    | build
    | dist
)/
'''

[tool.isort]
profile = "black"

[tool.ruff]
select = [
    "E",  # pycodestyle
    "F",  # Pyflakes
    "I",  # isort
    "D",  # pydocstyle
    "S",  # flake8-bandit
    "B",  # flake8-bugbear
]
ignore = [
    "E501", # Line too long
    "D106",  # Missing docstring in public nested class
    "D101"  # Missing docstring in public class
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11
target-version = "py311"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "D105", "F401", "D205"]
"tests/*" = ["S101", "D103", "D100"]
"exceptions.py" = ["D101", "D105", "D107"]
