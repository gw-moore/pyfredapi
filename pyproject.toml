[build-system]
requires = ["hatchling>=1.14.0"]
build-backend = "hatchling.build"

[project]
name = "pyfredapi"
description = "A full featured API client for the FRED API web service."
authors = [{ name = "Greg Moore", email = "gwmoore.career@gmail.com" }]
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
keywords = [
    "federal reserve",
    "fred",
    "economic data",
    "economic indicators",
    "economic statistics",
    "economic time series",
    "economic data api",
    "economic data api client",
    "economics",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "numpy>=1.0.0,<2.0.0",
    "pandas>=1.0.0,<3.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "requests>=2.0.0,<3.0.0",
    "rich>=13.0.0,<14.0.0",
]
dynamic = ["version"]

[project.optional-dependencies]
plot = ["plotly>=5.0.0,<6.0.0"]
docs = [
    "mkdocs==1.6.1",
    "jupyter==1.0.0",
    "plotly==5.18",
    "seaborn==0.12.2",
    "mkdocstrings-python==1.11.1",
    "mkdocs-material==9.5.38",
    "mkdocs-jupyter==0.25.0",
]

lint = [
    "black[jupyter]==24.3.0",
    "mypy==1.9.0",
    "pandas-stubs==2.2.1.240316",
    "pre-commit==3.7.0",
    "ruff==0.3.5",
    "types-frozendict==2.0.9",
    "types-requests==2.31.0.20240403",
    "types-setuptools==69.2.0.20240317",
]

test = [
    "coverage==7.4.4",
    "pytest==8.1.1",
    "pytest-cov==5.0.0",
    "pytest-recording==0.13.0",
    "tox==4.14.2",
]

dev = [
    "hatch==1.10.0",
    "pip-tools==7.4.1",
    "pyfredapi[plot]",
    "pyfredapi[docs]",
    "pyfredapi[lint]",
    "pyfredapi[test]",
]

[tool.hatch.version]
path = "pyfredapi/__about__.py"


[project.urls]
Homepage = "https://pyfredapi.readthedocs.io/en/latest/"
Source = "https://github.com/gw-moore/pyfredapi"


[tool.black]
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.nox
    | \.venv
    | \.ipynb_checkpoints
    | _build
    | buck-out
    | build
    | dist
)/
'''

[tool.ruff]
lint.select = [
    "B", # flake8-bugbear
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # Pyflakes
    "I", # isort
    "S", # flake8-bandit
]

lint.ignore = [
    "D101", # Missing docstring in public class
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "E501", # Line too long
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]

lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "D105", "F401", "D205"]
"tests/*" = ["S101", "D103", "D100"]
"exceptions.py" = ["D101", "D105", "D107"]
